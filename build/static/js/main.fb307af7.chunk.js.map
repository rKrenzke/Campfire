{"version":3,"sources":["helpers/environment.tsx","components/Registration.tsx","components/Login.tsx","components/Navbar.tsx","components/Homepage.tsx","assets/imageNotFound.png","components/Extras.tsx","components/Search.tsx","components/PackList.tsx","components/UserTripDetails.tsx","components/Sites.tsx","components/Admin.tsx","App.tsx","index.tsx"],"names":["APIURL","window","location","hostname","validateUsername","RegExp","HandleSubmit","props","handleSubmit","bind","state","username","email","password","passwordConfirm","event","preventDefault","this","length","test","fetch","method","headers","body","JSON","stringify","user","then","response","json","data","console","log","updateToken","sessionToken","setUser","close","catch","error","alert","id","role","Modal","isOpen","open","ModalHeader","className","Button","onClick","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","onChange","setState","target","value","type","ModalFooter","form","React","Component","Login","isAdmin","adminStatus","Sitebar","closeRegister","closeLogin","collapsed","showRegister","showLogin","hasScrolled","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","isLoggedIn","logout","Registration","setUserName","updateStatus","HomePage","Container","to","Extras","getActivities","activities","parkCode","url","process","result","setActivities","modalOpen","onclick","closeModal","Search","getSites","pageNumber","allSites","nextPage","previousPage","createNewTrip","closeExtrasModal","oneSiteInfo","extrasModal","site","token","campsiteName","name","siteDescription","description","totalSites","campsites","contactEmail","contacts","emailAddresses","emailAddress","siteAddress","addresses","city","line1","operatingHours","reservationUrl","costPerNight","fees","cost","Headers","Authorization","trip","nights","siteImage","map","index","Card","CardHeader","CardBody","Row","Col","images","src","NotFound","alt","scope","amenities","cellPhoneReception","title","icon","faSignal","firewoodForSale","faFire","potableWater","faTint","showers","faShower","toilets","faToilet","PackList","deletePackItem","item","getItems","tripId","editPackItem","itemToUpdate","packItem","editModal","itemId","updatePackItem","newItem","packList","message","who","faPencilAlt","faMinusCircle","placeholder","e","UserTripDetails","fetchPackList","packListItems","addPackItem","siteId","userName","updateTripInfo","campsiteReserved","campRes","recreationPassport","recPass","fireRestrictions","fireRes","rusticSite","rustic","fetchAllSites","checked","aria-label","fireRestriction","handleChange","CardFooter","md","deleteTrip","MySites","userTrips","editUpdateSite","tripToUpdate","updateOn","updateActive","updateOff","packListEmpty","Admin","modifyAdminStatus","deleteUserFunction","admin","allUsers","fetchAllUsers","AUTH","isAuthenticated","App","useState","setSessionToken","setAdminStatus","useEffect","localStorage","getItem","newToken","setItem","clear","path","Sites","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sdACIA,EAAS,GAEb,OAAQC,OAAOC,SAASC,UACpB,IAAK,YACDH,EAAS,wBACT,MACJ,IAAK,2BACDA,EAAS,mCAGFA,QCkBTI,EAAmBC,OAAO,0CA+GjBC,E,kDA5Gb,WAAYC,GAAoB,IAAD,8BAC7B,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,MAAQ,CACTC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAPQ,E,yDAWlBC,GAAY,IAAD,OACtBA,EAAMC,iBACN,IAAIL,EAAWM,KAAKP,MAAMC,SACtBC,EAAQK,KAAKP,MAAME,MACnBC,EAAWI,KAAKP,MAAMG,SACtBC,EAAkBG,KAAKP,MAAMI,gBACjC,IACE,IAAKH,IAAaC,IAAUC,EAAU,KAAM,6BAE5C,GAAII,KAAKP,MAAMG,SAASK,OAAS,EAAG,KAAM,wCAE1C,GAAIP,EAASO,OAAS,IAAMd,EAAiBe,KAAKR,GAChD,KAAM,sFAER,GAAIE,IAAaC,EAAiB,KAAM,yBAExCM,MAAM,GAAD,OAAIpB,EAAJ,kBAA4B,CAC/BqB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEC,KAAM,CAACf,WAAUC,QAAOC,gBAE9Cc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZ,EAAKvB,MAAM0B,YAAYH,EAAKI,cAC5B,EAAK3B,MAAM4B,QAAQL,EAAKJ,KAAKf,UAC7B,EAAKJ,MAAM6B,WAGZC,OAAM,SAACC,GAAD,OAAWP,QAAQC,IAAIM,MAChC,MAAOA,GACPC,MAAMD,M,+BAGD,IAAD,OACN,OACI,qBAAKE,GAAG,WAAWC,KAAK,aAAxB,SACI,eAACC,EAAA,EAAD,CAAOC,OAAQ1B,KAAKV,MAAMqC,KAAMJ,GAAG,gBAAnC,UACI,eAACK,EAAA,EAAD,CAAaC,UAAU,cAAvB,UACI,qBAAKN,GAAG,YAAR,iCACA,cAACO,EAAA,EAAD,CAAQD,UAAU,aAAaE,QAAS/B,KAAKV,MAAM6B,MAAnD,SAA0D,0CAE9D,eAACa,EAAA,EAAD,CAAWT,GAAG,YAAd,UACI,qBAAKA,GAAG,eACR,qBAAKA,GAAG,YAAR,SACF,eAACU,EAAA,EAAD,CAAMV,GAAG,eAAeW,SAAUlC,KAAKT,aAAvC,UACR,eAAC4C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,mBAAf,sBACA,cAACC,EAAA,EAAD,CACEC,SAAU,SAACzC,GAAD,OAAW,EAAK0C,SAAS,CAAC9C,SAAUI,EAAM2C,OAAOC,SAC3DA,MAAO1C,KAAKP,MAAMC,SAClB6B,GAAG,wBAGP,eAACY,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,gBAAf,mBACA,cAACC,EAAA,EAAD,CACEC,SAAU,SAACzC,GAAD,OAAW,EAAK0C,SAAS,CAAC7C,MAAOG,EAAM2C,OAAOC,SACxDA,MAAO1C,KAAKP,MAAME,MAClB4B,GAAG,gBACHoB,KAAK,aAGT,eAACR,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,mBAAf,uBACA,cAACC,EAAA,EAAD,CACEC,SAAU,SAACzC,GAAD,OAAW,EAAK0C,SAAS,CAAC5C,SAAUE,EAAM2C,OAAOC,SAC3DA,MAAO1C,KAAKP,MAAMG,SAClB2B,GAAG,mBACHoB,KAAK,gBAGT,eAACR,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,kBAAf,8BACA,cAACC,EAAA,EAAD,CACEC,SAAU,SAACzC,GAAD,OAAW,EAAK0C,SAAS,CAAC3C,gBAAiBC,EAAM2C,OAAOC,SAClEA,MAAO1C,KAAKP,MAAMI,gBAClB0B,GAAG,kBACHoB,KAAK,wBAMf,eAACC,EAAA,EAAD,CAAaf,UAAU,cAAvB,UACE,cAACC,EAAA,EAAD,CAAQe,KAAK,eAAetB,GAAG,oBAAoBoB,KAAK,SAAxD,4BAEU,gB,GArGWG,IAAMC,WC8DhBC,E,kDAxEf,WAAY1D,GAAoB,IAAD,8BAC7B,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,MAAQ,CACTC,SAAU,GACVE,SAAU,IALe,E,yDAUlBE,GAAY,IAAD,OACtBA,EAAMC,iBACN,IAAIL,EAAWM,KAAKP,MAAMC,SACtBE,EAAWI,KAAKP,MAAMG,SAC1BO,MAAM,GAAD,OAAIpB,EAAJ,eAAyB,CAC1BqB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEC,KAAM,CAACf,WAAUE,gBAEvCc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACDA,EAAKQ,MACPC,MAAM,qCACkB,GAAhBT,EAAKoC,SACb,EAAK3D,MAAM4D,cACX,EAAK5D,MAAM0B,YAAYH,EAAKI,cAC5B,EAAK3B,MAAM4B,QAAQ,EAAKzB,MAAMC,UAC9BoB,QAAQC,IAAIF,EAAKoC,SACjB,EAAK3D,MAAM6B,UAEX,EAAK7B,MAAM0B,YAAYH,EAAKI,cAC5B,EAAK3B,MAAM4B,QAAQ,EAAKzB,MAAMC,UAC9B,EAAKJ,MAAM6B,c,+BAIV,IAAD,OACN,OACE,qBAAKI,GAAG,QAAQC,KAAK,aAArB,SACE,eAACC,EAAA,EAAD,CAAOC,OAAQ1B,KAAKV,MAAMqC,KAAMJ,GAAG,aAAnC,UACE,eAACK,EAAA,EAAD,CAAaC,UAAU,cAAvB,UACI,qBAAKN,GAAG,YAAR,2BACA,cAACO,EAAA,EAAD,CAAQD,UAAU,aAAaE,QAAS/B,KAAKV,MAAM6B,MAAnD,SAA0D,0CAE9D,eAACa,EAAA,EAAD,CAAWT,GAAG,YAAd,UACE,qBAAKA,GAAG,eACN,qBAAKA,GAAG,YAAR,SACE,eAACU,EAAA,EAAD,CAAMV,GAAG,YAAYW,SAAUlC,KAAKT,aAApC,UACE,eAAC4C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,iBAAf,sBACE,cAACC,EAAA,EAAD,CAAOC,SAAU,SAACzC,GAAD,OAAW,EAAK0C,SAAS,CAAC9C,SAAUI,EAAM2C,OAAOC,SAASA,MAAO1C,KAAKP,MAAMC,SAAU6B,GAAG,qBAE9G,eAACY,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,gBAAf,uBACE,cAACC,EAAA,EAAD,CAAOC,SAAU,SAACzC,GAAD,OAAW,EAAK0C,SAAS,CAAC5C,SAAUE,EAAM2C,OAAOC,SAASA,MAAO1C,KAAKP,MAAMG,SAAU2B,GAAG,gBAAgBoB,KAAK,wBAK/I,eAACC,EAAA,EAAD,CAAaf,UAAU,cAAvB,UACE,cAACC,EAAA,EAAD,CAAQe,KAAK,YAAYtB,GAAG,oBAAoBoB,KAAK,SAArD,mBAEU,gB,GAjEAG,IAAMC,WC6EXI,G,wDAxEX,WAAY7D,GAAoB,IAAD,8BAC7B,cAAMA,IACD8D,cAAgB,EAAKA,cAAc5D,KAAnB,gBACrB,EAAK6D,WAAa,EAAKA,WAAW7D,KAAhB,gBAClB,EAAKC,MAAO,CACV6D,WAAW,EACXC,cAAc,EACdC,WAAW,EACXC,aAAa,GARc,E,4DAa7BzD,KAAKwC,SAAS,CAACe,cAAc,M,mCAI7BvD,KAAKwC,SAAS,CAACgB,WAAW,M,+BAGnB,IAAD,OACJ,OACA,gCAKF,eAACE,EAAA,EAAD,CAAQnC,GAAG,SAASoC,MAAM,QAAQC,OAAK,EAACC,OAAO,KAA/C,UACE,eAACC,EAAA,EAAD,CAAavC,GAAG,QAAQwC,KAAK,IAAIlC,UAAU,UAA3C,UAAqD,sCAArD,cACA,cAACmC,EAAA,EAAD,CAAejC,QAAS,kBAAM,EAAKS,SAAS,CAACc,WAAY,EAAK7D,MAAM6D,aAAazB,UAAU,SAC3F,cAACoC,EAAA,EAAD,CAAUvC,QAAS1B,KAAKP,MAAM6D,UAAWY,QAAM,EAA/C,SACE,eAACC,EAAA,EAAD,CAAK5C,GAAG,WAAW2C,QAAM,EAACrC,UAAU,mDAApC,UACE,mCACC7B,KAAKV,MAAM2D,QAAU,cAACmB,EAAA,EAAD,UAAS,cAACC,EAAA,EAAD,CAASN,KAAK,SAAd,4BAA0D,+BAE/F/D,KAAKV,MAAMgF,WAYD,KAXF,qCACE,cAACF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAASN,KAAK,UAAd,yBAEF,cAACK,EAAA,EAAD,UACA,cAACtC,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKS,SAAS,CAACgB,WAAW,KAAjD,qBAEA,cAACY,EAAA,EAAD,UACE,cAACtC,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKS,SAAS,CAACe,cAAc,KAApD,yBAINvD,KAAKV,MAAMgF,WACT,qCACE,cAACF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAASN,KAAK,UAAd,yBAEF,cAACK,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAASN,KAAK,aAAd,4BAEF,cAACK,EAAA,EAAD,UACE,cAACtC,EAAA,EAAD,CAAQC,QAAS/B,KAAKV,MAAMiF,OAA5B,yBAGF,aAIV,cAACC,EAAD,CAAcxD,YAAahB,KAAKV,MAAM0B,YAAaW,KAAM3B,KAAKP,MAAM8D,aAAcpC,MAAOnB,KAAKoD,cAAelC,QAASlB,KAAKV,MAAMmF,cACjI,cAAC,EAAD,CAAOzD,YAAahB,KAAKV,MAAM0B,YAAaW,KAAM3B,KAAKP,MAAM+D,UAAWrC,MAAOnB,KAAKqD,WAAYH,YAAalD,KAAKV,MAAMoF,aAAcxD,QAASlB,KAAKV,MAAMmF,qB,GAlE1I3B,IAAMC,Y,QCHb4B,G,MAdE,WACf,OACE,qBAAK9C,UAAU,UAAf,SACE,eAAC+C,EAAA,EAAD,CAAWrD,GAAG,eAAd,UACE,qBAAIM,UAAU,QAAd,UAAsB,sCAAtB,cACA,sBAAKA,UAAU,aAAf,UACA,cAAC,IAAD,CAAMgD,GAAG,UAAT,SAAmB,cAAC/C,EAAA,EAAD,+BADnB,IAEA,cAACA,EAAA,EAAD,oC,wCCdO,G,MAAA,IAA0B,2CCmE1BgD,E,kDAlDX,WAAYxF,GAAsB,IAAD,8BAC7B,cAAMA,IACDyF,cAAgB,EAAKA,cAAcvF,KAAnB,gBACrB,EAAKC,MAAO,CACRuF,WAAY,IAJa,E,iEAS7BhF,KAAK+E,kB,oCAGKnE,GACVZ,KAAKwC,SAAS,CAACwC,WAAYpE,M,sCAGf,IAAD,OAEPqE,EAAmBjF,KAAKV,MAAM2F,SAC9BC,EAAW,+DAA2DD,EAA3D,0CAtBPE,4CAwBRhF,MAAM+E,GACLxE,MAAK,SAAA0E,GAAW,OAAOA,EAAOxE,UAC9BF,MAAK,SAAAE,GAAI,OAAI,EAAKyE,cAAczE,MAChCQ,OAAM,SAACC,GAAD,OAAWP,QAAQC,IAAIM,Q,+BAIzB,IAAD,OAEJ,OADCP,QAAQC,IAAIf,KAAKP,MAAMuF,YAEpB,eAACvD,EAAA,EAAD,CAAOC,OAAQ1B,KAAKV,MAAMgG,UAA1B,UACI,cAACtD,EAAA,EAAD,UAOKhC,KAAKP,MAAMuF,WAAa,mEAAsChF,KAAKV,MAAM2F,YAAgB,wDAE9F,cAACrC,EAAA,EAAD,UACI,cAACd,EAAA,EAAD,CAAQyD,QAAS,kBAAM,EAAKjG,MAAMkG,cAAlC,2B,GA3CC1C,IAAMC,W,gBCkLZ0C,E,kDA1KX,WAAYnG,GAAoB,IAAD,8BAC3B,cAAMA,IAoBVoG,SAAW,WACP,IACIR,EADoB,4DACC,iBAAa,EAAKzF,MAAMkG,WAAxB,4BA1BjBR,4CA4BRhF,MAAM+E,GACLxE,MAAK,SAAA0E,GAAW,OAAOA,EAAOxE,UAC9BF,MAAK,SAAAE,GAAS,EAAK4B,SAAS,CAACoD,SAAUhF,QAzBxC,EAAK8E,SAAW,EAAKA,SAASlG,KAAd,gBAChB,EAAKqG,SAAW,EAAKA,SAASrG,KAAd,gBAChB,EAAKsG,aAAe,EAAKA,aAAatG,KAAlB,gBACpB,EAAKuG,cAAgB,EAAKA,cAAcvG,KAAnB,gBAErB,EAAKwG,iBAAkB,EAAKA,iBAAiBxG,KAAtB,gBACvB,EAAKC,MAAO,CACRkG,WAAY,EACZC,SAAU,KACVK,YAAa,KACbC,aAAa,EACbjB,SAAU,IAba,E,gEAkB3BjF,KAAK0F,a,iCAaL1F,KAAKwC,SAAS,CAACmD,WAAY3F,KAAKP,MAAMkG,WAAa,IACnD3F,KAAK0F,a,qCAIL1F,KAAKwC,SAAS,CAACmD,WAAY3F,KAAKP,MAAMkG,WAAa,IACnD3F,KAAK0F,a,kCAGGT,GACRjF,KAAKwC,SAAS,CAACyC,SAAUA,IACzBjF,KAAKwC,SAAS,CAAC0D,aAAa,M,yCAI5BpF,QAAQC,IAAI,YACZf,KAAKwC,SAAS,CAAC0D,aAAa,M,oCAGlBC,GACV,IAAIC,EAAQpG,KAAKV,MAAM8G,MACnBC,EAAeF,EAAKG,KACpBC,EAAkBJ,EAAKK,YAAcL,EAAKK,YAAc,KACxDC,EAAaN,EAAKO,UAAUD,WAAaN,EAAKO,UAAUD,WAAa,KACrEE,EAAeR,EAAKS,SAASC,eAAe,GAAGC,aAAeX,EAAKS,SAASC,eAAe,GAAGC,aAAe,KAE7GC,EAAcZ,EAAKa,UAAU,GAAGC,MAAQd,EAAKa,UAAU,GAAGE,MAAQf,EAAKa,UAAU,GAAGC,KAAOd,EAAKa,UAAU,GAAGE,MAAQ,KACrHC,EAAiBhB,EAAKgB,eAAe,GAAGX,YAAcL,EAAKgB,eAAe,GAAGX,YAAa,KAC1FY,EAAiBjB,EAAKjB,IAAMiB,EAAKjB,IAAK,KAEtCmC,EAAelB,EAAKmB,KAAKrH,OAAS,EAAIkG,EAAKmB,KAAK,GAAGC,KAAM,KAI7DpH,MAAM,GAAD,OAAIpB,EAAJ,iBAA2B,CAC5BqB,OAAQ,OACRC,QAAS,IAAImH,QAAQ,CACjB,eAAgB,mBAChBC,cAAerB,IAEnB9F,KAAMC,KAAKC,UAAU,CACjBkH,KAAM,CACNrB,eACAE,kBACAE,aACAE,eAEAI,cACAI,iBACAC,iBACAO,OArBK,KAsBLN,eACAO,UArBQ,UAyBXlH,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACDA,EAAKQ,MACPC,MAAM,yCAEJA,MAAM,eAENR,QAAQC,IAAI,qB,+BAKjB,IAAD,OACJ,OACI,qBAAKQ,GAAG,UAAR,SACI,sBAAKA,GAAG,cAAR,UACCT,QAAQC,IAAIf,KAAKP,MAAMmG,UACvB5F,KAAKP,MAAMmG,SAAW5F,KAAKP,MAAMmG,SAAS/E,KAAKgH,KAAI,SAAC1B,EAAW2B,GAC5D,OAAO,cAAClD,EAAA,EAAD,CAAWrD,GAAG,cAAd,SACP,eAACwG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,uCAAQ7B,EAAKG,KAAb,cAAuBH,EAAKa,UAAU,GAAGC,UAE7C,cAACgB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAKtG,UAAU,WAAf,SACwB,IAAvBsE,EAAKiC,OAAOnI,OAAe,qBAAKoI,IAAKC,EAAUzG,UAAU,YAAY0G,IAAI,kBAAoB,qBAAKhH,GAAG,YAAY8G,IAAKlC,EAAKiC,OAAO,GAAGlD,IAAKrD,UAAU,YAAY0G,IAAI,eAErK,eAACJ,EAAA,EAAD,CAAKtG,UAAU,WAAf,UACA,4BAAIsE,EAAKK,YAAcL,EAAKK,YAAc,mCAC1C,6BAAI,mBAAGzC,KAAMoC,EAAKjB,IAAKzC,OAAO,QAA1B,+BAEJ,eAAC0F,EAAA,EAAD,CAAKtG,UAAU,WAAf,UACA,kCACI,gCACI,6BACI,oBAAI2G,MAAM,MAAV,4BAGR,kCACI,6BACI,6BAAKrC,EAAKgB,eAAelH,OAAS,EAAIkG,EAAKgB,eAAe,GAAGX,YAAc,kCAE/E,uBACA,6BACI,+BAAI,6CAAJ,IAAyBL,EAAKO,UAAUD,WAAaN,EAAKO,UAAUD,WAAa,mCAErF,6BAGR,gCACI,4CACA,sBAAKlF,GAAG,iBAAR,UAC0C,MAArC4E,EAAKsC,UAAUC,mBAA6B,qBAAKnH,GAAG,WAAWoH,MAAM,sBAAzB,SAA+C,cAAC,IAAD,CAAiBC,KAAMC,QAAqC,qBAAKtH,GAAG,SAASoH,MAAM,6BAAvB,SAAoD,cAAC,IAAD,CAAiBC,KAAMC,QAChM,MAAlC1C,EAAKsC,UAAUK,gBAA0B,qBAAKvH,GAAG,aAAaoH,MAAM,uBAA3B,SAAkD,cAAC,IAAD,CAAiBC,KAAMG,QAAmC,qBAAKxH,GAAG,OAAOoH,MAAM,oBAArB,SAAyC,cAAC,IAAD,CAAiBC,KAAMG,QACrN5C,EAAKsC,UAAUO,aAAa,GAAK,qBAAKzH,GAAG,QAAQoH,MAAM,0BAAtB,SAAgD,cAAC,IAAD,CAAiBC,KAAMK,QAAmC,qBAAK1H,GAAG,UAAUoH,MAAM,mBAAxB,SAA2C,cAAC,IAAD,CAAiBC,KAAMK,QAChL,QAA7B9C,EAAKsC,UAAUS,QAAQ,GAAe,qBAAK3H,GAAG,WAAWoH,MAAM,uBAAzB,SAAgD,cAAC,IAAD,CAAiBC,KAAMO,QAAqC,qBAAK5H,GAAG,SAASoH,MAAM,8BAAvB,SAAqD,cAAC,IAAD,CAAiBC,KAAMO,QAC9NhD,EAAKsC,UAAUW,QAAQ,GAAK,qBAAK7H,GAAG,SAASoH,MAAM,oBAAvB,SAA2C,cAAC,IAAD,CAAiBC,KAAMS,QAAqC,qBAAK9H,GAAG,WAAWoH,MAAM,uBAAzB,SAAgD,cAAC,IAAD,CAAiBC,KAAMS,cAInN,uBACA,sBAAKxH,UAAU,kBAAf,UACI,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKmE,YAAYC,EAAKlB,WAA7C,0BACC,EAAK3F,MAAM8G,MAAQ,cAACtE,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKgE,cAAcI,IAAOzD,MAAOyD,EAAxD,2BAAuF,gDAO1G,6BACb,cAAC,EAAD,CAAQb,UAAWtF,KAAKP,MAAMyG,YAAajB,SAAUjF,KAAKP,MAAMwF,SAAUO,WAAYxF,KAAKgG,mBAC/F,sBAAKzE,GAAG,cAAR,UACI,cAACO,EAAA,EAAD,CAAQC,QAAS/B,KAAK8F,aAAtB,4BACA,cAAChE,EAAA,EAAD,CAAQC,QAAS/B,KAAK6F,SAAtB,oC,GAnKC/C,IAAMC,W,QC4EZuG,E,kDA/EX,WAAYhK,GAAkB,IAAD,8BACzB,cAAMA,IAWViK,eAAiB,SAACC,GACdrJ,MAAM,GAAD,OAAIpB,EAAJ,qBAAuByK,EAAKjI,IAAM,CACnCnB,OAAQ,SACRC,QAAS,IAAImH,QAAQ,CACrB,eAAgB,mBAChBC,cAAe,EAAKnI,MAAM8G,UAEvB1F,MAAK,kBAAM,EAAKpB,MAAMmK,SAASD,EAAKE,YAnBlB,EAsB7BC,aAAe,SAACH,GACZ,EAAKhH,SAAS,CAACoH,aAAcJ,EAAKK,WAClC,EAAKrH,SAAS,CAACsH,WAAW,IAC1B,EAAKtH,SAAS,CAACkH,OAAQF,EAAKE,SAC5B,EAAKlH,SAAS,CAACuH,OAAQP,EAAKjI,MA1BH,EA6B7ByI,eAAiB,WACb,IAAIC,EAAU,EAAKxK,MAAMmK,aACzBzJ,MAAM,GAAD,OAAIpB,EAAJ,qBAAuB,EAAKU,MAAMsK,QAAU,CACjD3J,OAAQ,MACRC,QAAS,IAAImH,QAAQ,CACrB,eAAgB,mBAChBC,cAAe,EAAKnI,MAAM8G,QAE1B9F,KAAMC,KAAKC,UAAU,CACnB0J,SAAU,CACRD,eAGDvJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC9BF,MAAK,SAACG,GACDA,EAAKQ,MACPP,QAAQC,IAAIF,EAAKQ,MAAM8I,UAEvB,EAAK7K,MAAMmK,SAAS,EAAKhK,MAAMiK,QAC/B,EAAKlH,SAAS,CAACsH,WAAW,SA9C9B,EAAKP,eAAiB,EAAKA,eAAe/J,KAApB,gBACtB,EAAKmK,aAAe,EAAKA,aAAanK,KAAlB,gBACpB,EAAKC,MAAM,CACPqK,WAAW,EACXF,aAAc,GACdF,OAAQ,EACRK,OAAQ,GARa,E,qDAsDpB,IAAD,OACJ,OACI/J,KAAKV,MAAM4K,SAASrC,KAAI,SAAC2B,EAAW1B,GAChC,OAAO,+BACH,6BAAK0B,EAAKK,WACV,6BAAKL,EAAKY,MACV,sBAAK7I,GAAG,kBAAR,UACA,cAACO,EAAA,EAAD,CAAQ6B,MAAM,OAAO5B,QAAS,kBAAM,EAAK4H,aAAaH,IAAtD,SAA6D,cAAC,IAAD,CAAiBZ,KAAMyB,QACpF,cAACvI,EAAA,EAAD,CAAQ6B,MAAM,SAAS5B,QAAS,kBAAM,EAAKwH,eAAeC,IAA1D,SAAiE,cAAC,IAAD,CAAiBZ,KAAM0B,WAExF,8BACI,cAAC7I,EAAA,EAAD,CAAOC,OAAQ,EAAKjC,MAAMqK,UAA1B,SACI,eAAC9H,EAAA,EAAD,WACI,gDACA,cAACF,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKS,SAAS,CAACsH,WAAW,KAAjD,eACA,cAACxH,EAAA,EAAD,CAAOgE,KAAK,aAAa3D,KAAK,OAAO4H,YAAa,EAAK9K,MAAMmK,aAAcrH,SAAU,SAACiI,GAAD,OAAO,EAAKhI,SAAS,CAACoH,aAAcY,EAAE/H,OAAOC,WAClI,cAACZ,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKiI,kBAA5B,2BAbAlC,U,GA1DThF,IAAMC,WCmLd0H,E,kDA9KX,WAAYnL,GAAsB,IAAD,8BAC7B,cAAMA,IAcVoL,cAAgB,SAAChD,GACb,IAAIgC,EAAShC,EACV,EAAKpI,MAAM8G,OACZjG,MAAM,GAAD,OAAIpB,EAAJ,6BAA+B2K,GAAU,CAC5CtJ,OAAQ,MACRC,QAAS,IAAImH,QAAQ,CACnB,eAAgB,mBAChBC,cAAe,EAAKnI,MAAM8G,UAG3B1F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACJ,GACFA,EAAKL,OAAS,GACf,EAAKuC,SAAS,CAACmI,cAAerK,OAGjCc,OAAM,SAACC,GAAD,OAAWP,QAAQC,IAAIM,OA/BL,EAmC/BuJ,YAAc,SAACC,EAAgBrB,GAC7B,IAAIE,EAAiBmB,EACjBhB,EAAWL,EAGfrJ,MAAM,GAAD,OAAIpB,EAAJ,yBAAmC,CACpCqB,OAAQ,OACRC,QAAS,IAAImH,QAAQ,CACrB,eAAgB,mBAChBC,cAAe,EAAKnI,MAAM8G,QAE1B9F,KAAMC,KAAKC,UAAU,CACnB0J,SAAU,CACRR,SACAG,YACCpJ,KAAM,CAACqK,SAAU,uBAEnBpK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC9BF,MAAK,SAACG,GACDA,EAAKQ,MACPP,QAAQC,IAAIF,EAAKQ,MAAM8I,SAErB,EAAKO,cAAchB,OAzDA,EAgE/BqB,eAAiB,SAACrB,GAChB,IAAIsB,EAAmB,EAAKvL,MAAMwL,QAC9BC,EAAqB,EAAKzL,MAAM0L,QAChCC,EAAmB,EAAK3L,MAAM4L,QAC9BC,EAAa,EAAK7L,MAAM8L,OAE5BpL,MAAM,GAAD,OAAIpB,EAAJ,qBAAuB2K,GAAU,CAClCtJ,OAAQ,MACRC,QAAS,IAAImH,QAAQ,CACrB,eAAgB,mBAChBC,cAAe,EAAKnI,MAAM8G,QAE1B9F,KAAMC,KAAKC,UAAU,CAACkH,KAAM,CACtBsD,mBACAE,qBACAE,mBACAE,kBAGH5K,MAAK,kBAAM,EAAKpB,MAAMkM,oBAjF7B,EAAKT,eAAiB,EAAKA,eAAevL,KAApB,gBACtB,EAAKoL,YAAc,EAAKA,YAAYpL,KAAjB,gBACnB,EAAKC,MAAM,CACPyK,SAAU,GACVL,SAAU,GACVoB,SAAS,EACTE,SAAS,EACTE,SAAS,EACTE,QAAQ,EACRZ,cAAe,IAXU,E,yDAuFtB7K,GACXE,KAAKwC,SAAS,CAACqH,SAAU/J,EAAM2C,OAAOC,U,+BAE7B,IAAD,OACJ,OACI,eAACqF,EAAA,EAAD,CAAMlG,UAAU,WAAhB,UACQ,cAACmG,EAAA,EAAD,CAAYnG,UAAU,aAAtB,SACE,4BAAI7B,KAAKV,MAAM6G,KAAKE,iBAEtB,eAAC4B,EAAA,EAAD,CAAUpG,UAAU,WAApB,UACI,4BAAI7B,KAAKV,MAAM6G,KAAKI,kBACpB,uBACA,sBAAK1E,UAAU,MAAf,UACA,eAACsG,EAAA,EAAD,CAAKtG,UAAU,uBAAf,UACE,eAACI,EAAA,EAAD,WACE,gDACA,cAACK,EAAA,EAAD,CAAOK,KAAK,SAAS4H,YAAY,uBACjC,cAACjI,EAAA,EAAD,CAAOK,KAAK,SAAS4H,YAAY,iBACjC,cAACjI,EAAA,EAAD,CAAOK,KAAK,SAAS4H,YAAY,mBAEnC,uBACA,sBAAK1I,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,uBAAOc,KAAK,WAAW8I,UAASzL,KAAKV,MAAM6G,KAAK6E,iBAAiCU,aAAW,cAAchJ,MAAM,cAAcH,SAAU,kBAAM,EAAKC,SAAS,CAACyI,SAAS,WAG1K,uBAAO5I,QAAQ,cAAf,kCAEF,sBAAKR,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,uBAAOc,KAAK,WAAW8I,UAASzL,KAAKV,MAAM6G,KAAK+E,mBAAmCQ,aAAW,cAAchJ,MAAM,cAAcH,SAAU,kBAAI,EAAKC,SAAS,CAAC2I,SAAS,WAG1K,wBAAO9I,QAAQ,cAAf,iCAAiD,yDAEnD,sBAAKR,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,uBAAOc,KAAK,WAAW8I,UAASzL,KAAKV,MAAM6G,KAAKwF,gBAAgCD,aAAW,cAAchJ,MAAM,cAAcH,SAAU,kBAAI,EAAKC,SAAS,CAAC6I,SAAS,WAGvK,uBAAOhJ,QAAQ,cAAf,kCAEF,sBAAKR,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,uBAAOc,KAAK,WAAW8I,UAASzL,KAAKV,MAAM6G,KAAKmF,WAA2BI,aAAW,SAAShJ,MAAM,SAASH,SAAU,kBAAI,EAAKC,SAAS,CAAC+I,QAAQ,WAGvJ,uBAAOlJ,QAAQ,SAAf,4BAEF,cAACP,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKgJ,eAAe,EAAKzL,MAAM6G,KAAK5E,KAA3D,6BAEF,cAAC4G,EAAA,EAAD,CAAKtG,UAAU,qBAAf,SACE,kCACE,8CACE,+BACE,sCACA,wCAED7B,KAAKP,MAAMkL,cAAc1K,OAAS,EAAI,cAAC,EAAD,CAAUiK,SAAUlK,KAAKP,MAAMkL,cAAelB,SAAUzJ,KAAK0K,cAAetE,MAAOpG,KAAKV,MAAM8G,QAAWpG,KAAK0K,cAAc1K,KAAKV,MAAM6G,KAAK5E,IACnL,+BACE,uBAAOoB,KAAK,OAAOpB,GAAG,UAAUgJ,YAAY,oBAAoB7H,MAAO1C,KAAKP,MAAMoK,SAAUtH,SAAUvC,KAAK4L,aAAapM,KAAKQ,QAC7H,cAAC8B,EAAA,EAAD,CAAQ6B,MAAM,UAAU5B,QAAS,kBAAM,EAAK6I,YAAY,EAAKtL,MAAM6G,KAAK5E,GAAI,EAAK9B,MAAMoK,WAAvF,+BAMZ,cAACgC,EAAA,EAAD,CAAYhK,UAAU,aAAtB,SACE,cAACsG,EAAA,EAAD,CAAK5G,GAAG,YAAYuK,GAAG,IAAvB,SACE,cAAChK,EAAA,EAAD,CACEC,QAAS,WACP,EAAKzC,MAAMyM,WAAW,EAAKzM,MAAM6G,OAFrC,0BApEoBnG,KAAKV,MAAMwI,W,GA7FzB/E,aCuGfiJ,E,kDAnGb,WAAY1M,GAAoB,IAAD,8BAC3B,cAAMA,IAiBVkM,cAAgB,WACX,EAAKlM,MAAM8G,OACZjG,MAAM,GAAD,OAAIpB,EAAJ,iBAA2B,CAC9BqB,OAAQ,MACRC,QAAS,IAAImH,QAAQ,CACnB,eAAgB,mBAChBC,cAAe,EAAKnI,MAAM8G,UAG3B1F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACJ,GAAD,OAAU,EAAKkC,SAAS,CAACyJ,UAAW3L,OACzCc,OAAM,SAACC,GAAD,OAAWP,QAAQC,IAAIM,OA7BL,EAiC/B0K,WAAa,SAACrE,GACZvH,MAAM,GAAD,OAAIpB,EAAJ,qBAAuB2I,EAAKnG,IAAM,CACnCnB,OAAQ,SACRC,QAAS,IAAImH,QAAQ,CACrB,eAAgB,mBAChBC,cAAe,EAAKnI,MAAM8G,UAEvB1F,MAAK,kBAAM,EAAK8K,oBAxCM,EA8C/BU,eAAiB,SAACxE,GAChB,EAAKlF,SAAS,CAAC2J,aAAczE,KA/CA,EAkD/B0E,SAAW,WACT,EAAK5J,SAAS,CAAC6J,cAAc,KAnDA,EAsD/BC,UAAY,WACV,EAAK9J,SAAS,CAAC6J,cAAc,KArD3B,EAAKD,SAAW,EAAKA,SAAS5M,KAAd,gBAChB,EAAK0M,eAAiB,EAAKA,eAAe1M,KAApB,gBACtB,EAAK8M,UAAY,EAAKA,UAAU9M,KAAf,gBACjB,EAAKuM,WAAa,EAAKA,WAAWvM,KAAhB,gBAClB,EAAKC,MAAO,CACRwM,UAAW,GACXI,cAAc,EACdF,aAAc,GACdtC,SAAU,GACVc,cAAe,GACf4B,eAAe,GAZQ,E,gEA4D7BvM,KAAKwL,gBACL1K,QAAQC,IAAIf,KAAKV,MAAM8G,S,+BAMlB,IAAD,OAEN,OADCtF,QAAQC,IAAIf,KAAKV,MAAMmB,MAEtB,8BACE,qBAAKc,GAAG,YAAR,SACE,eAACqD,EAAA,EAAD,WACE,eAACuD,EAAA,EAAD,WACGrH,QAAQC,IAAIf,KAAKP,MAAMwM,UAAUhM,OAAQD,KAAKP,MAAMwM,WACnDjM,KAAKP,MAAMwM,UAAUhM,OACrBD,KAAKP,MAAMwM,UAAUpE,KAAI,SAAC1B,EAAW2B,GACnC,OAAO,cAAC,EAAD,CAAiB3B,KAAMA,EAAM2B,MAAOA,EAAO1B,MAAO,EAAK9G,MAAM8G,MAAO2F,WAAY,EAAKA,WAAYP,cAAe,EAAKA,mBAG5HxL,KAAKwL,mBAGX,cAAC/J,EAAA,EAAD,CAAOC,OAAQ1B,KAAKP,MAAM4M,aAA1B,SACE,eAACrK,EAAA,EAAD,WACI,+CACA,qBAAKT,GAAG,qBAAR,SACI,cAACO,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKS,SAAS,CAAC6J,cAAc,KAApD,oC,GAxFEvJ,IAAMC,WC+EbyJ,G,kDAzFX,WAAYlN,GAAc,IAAD,8BACrB,cAAMA,IACDmN,kBAAoB,EAAKA,kBAAkBjN,KAAvB,gBACzB,EAAKkN,mBAAqB,EAAKA,mBAAmBlN,KAAxB,gBAC1B,EAAKC,MAAM,CACPkN,OAAO,EACPC,SAAU,IANO,E,4DAeT,IAAD,OACXzM,MAAM,GAAD,OAAIpB,EAAJ,eAAyB,CAC1BqB,OAAQ,MACRC,QAAS,IAAImH,QAAQ,CACnB,eAAgB,mBAChBC,cAAezH,KAAKV,MAAM8G,UAG3B1F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACJ,GAAD,OAAU,EAAKkC,SAAS,CAACoK,SAAUtM,OACxCc,OAAM,SAACC,GAAD,OAAWP,QAAQC,IAAIM,Q,wCAGpBZ,GACdN,MAAM,GAAD,OAAIpB,EAAJ,uBAAyB0B,EAAKc,IAAM,CACrCnB,OAAQ,MACRC,QAAS,IAAImH,QAAQ,CACnB,eAAgB,mBAChBC,cAAezH,KAAKV,MAAM8G,UAG3B1F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUC,QAAQC,IAAIF,MAC3BO,OAAM,SAACC,GAAD,OAAWP,QAAQC,IAAIM,MAC9BrB,KAAK6M,kB,yCAIMpM,GACfN,MAAM,GAAD,OAAIpB,EAAJ,uBAAyB0B,EAAKc,IAAM,CACrCnB,OAAQ,SACRC,QAAS,IAAImH,QAAQ,CACnB,eAAgB,mBAChBC,cAAezH,KAAKV,MAAM8G,UAG7B1F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC1BF,MAAK,SAACG,GAAD,OAAUC,QAAQC,IAAIF,MAC3BO,OAAM,SAACC,GAAD,OAAWP,QAAQC,IAAIM,MAC9BrB,KAAK6M,kB,+BAIJ,IAAD,OACJ,OACI,sBAAKtL,GAAG,mBAAR,UACI,4DAGA,kCACI,+BACI,sCACA,uCACA,kDACA,mDACA,gDAEHvB,KAAKP,MAAMmN,SAAS3M,OAAS,EAAID,KAAKP,MAAMmN,SAAS/E,KAAI,SAACpH,GACvD,OAAO,+BACC,6BAAKA,EAAKf,WACV,6BAAKe,EAAKd,QACV,6BAAqB,GAAhBc,EAAKwC,QAAkB,MAAQ,OACpC,6BAAI,cAACnB,EAAA,EAAD,CAAQ6B,MAAM,OAAO5B,QAAS,kBAAM,EAAK0K,kBAAkBhM,IAA3D,sBACJ,6BAAI,cAACqB,EAAA,EAAD,CAAQ6B,MAAM,SAAS5B,QAAS,kBAAM,EAAK2K,mBAAmBjM,IAA9D,uBAEXT,KAAK6M,0B,GAjFV/J,IAAMC,WCEpB+J,GAAO,CACXC,iBAAiB,GA4DJC,GAxDsB,WAAO,IAAD,EACDC,qBADC,mBAClChM,EADkC,KACpBiM,EADoB,OAEPD,oBAAS,GAFF,mBAElChK,EAFkC,KAEzBkK,EAFyB,OAGTF,mBAAS,IAHA,mBAGlCnC,EAHkC,KAGxBrG,EAHwB,KAKzC2I,qBAAU,WACJC,aAAaC,QAAQ,WACvBJ,EAAgBG,aAAaC,QAAQ,UACrCR,GAAKC,iBAAkB,KAGxB,CAAC9L,IAwBJ,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQD,YAxBQ,SAACuM,GACnBF,aAAaG,QAAQ,QAASD,GAC9BL,EAAgBK,GAChBzM,QAAQC,IAAIE,IAqBwBsD,OAVnB,WACjB8I,aAAaI,QACbP,EAAgB,IAChBzI,EAAY,IACZ0I,GAAe,GACfL,GAAKC,iBAAkB,GAKiCzI,aAAcrD,EAAcgC,UAAWA,EAASyB,aAlBtF,WAClByI,GAAe,IAiBoH1I,YAd5G,SAAC/E,GACxB+E,EAAY/E,MAcV,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgO,KAAK,UAAZ,SACE,cAAC,EAAD,CAAQtH,MAAOnF,MAEjB,cAAC,IAAD,CAAOyM,KAAK,SAAZ,SACE,cAAC,GAAD,CAAOzK,QAASA,EAASmD,MAAOnF,MAElC,cAAC,IAAD,CAAOyM,KAAK,aAAZ,SACE,cAACC,EAAD,CAAOvH,MAAOnF,EAAcR,KAAMqK,MAEpC,cAAC,IAAD,CAAO4C,KAAK,IAAZ,SACE,cAAC,EAAD,aChEVE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fb307af7.chunk.js","sourcesContent":["\r\nlet APIURL = '';\r\n\r\nswitch (window.location.hostname){\r\n    case 'localhost' || '127.0.0.1':\r\n        APIURL = 'http://localhost:4000';\r\n        break;\r\n    case 'micampfire.herokuapp.com' :\r\n        APIURL = 'https://micampfire.herokuapp.com'\r\n}\r\n\r\nexport default APIURL;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    ModalFooter,\r\n  } from \"reactstrap\";\r\nimport APIURL from '../helpers/environment';\r\n\r\ntype AcceptProps ={\r\n    updateToken: (token: string) => void,\r\n    open: boolean,\r\n    close: () => void,\r\n    setUser: (username: string) => void\r\n}\r\n\r\ntype UserState = {\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    passwordConfirm: string\r\n}\r\n\r\nconst validateUsername = RegExp(\"((?=.*?[0-9]).*|(?=.*?[#?!@$%^&*-]).*)\");\r\n\r\nclass HandleSubmit extends React.Component<AcceptProps, UserState> {\r\n  constructor(props: AcceptProps){\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirm: ''\r\n      };    \r\n  };\r\n\r\n  handleSubmit(event: any){\r\n    event.preventDefault();\r\n    let username = this.state.username;\r\n    let email = this.state.email;\r\n    let password = this.state.password;\r\n    let passwordConfirm = this.state.passwordConfirm;\r\n    try {\r\n      if (!username || !email || !password) throw \"Please fill out all fields\";\r\n  \r\n      if (this.state.password.length < 5) throw \"Password must be 5 or more characters\";\r\n  \r\n      if (username.length < 4 || !validateUsername.test(username))\r\n        throw \"Username must be 4 or more characters and include 1 number and/or special character\";\r\n  \r\n      if (password !== passwordConfirm) throw \"Passwords do not match\";\r\n      \r\n      fetch(`${APIURL}/user/register`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ user: {username, email, password } }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          this.props.updateToken(data.sessionToken);\r\n          this.props.setUser(data.user.username);\r\n          this.props.close();\r\n          // history.push(\"/\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n        <div id=\"register\" role=\"navigation\">\r\n            <Modal isOpen={this.props.open} id=\"registerModal\">\r\n                <ModalHeader className=\"modalHeader\">\r\n                    <div id=\"mainTitle\">Welcome to Campfire</div>\r\n                    <Button className=\"closeModal\" onClick={this.props.close}><span>x</span></Button>\r\n                </ModalHeader>\r\n                <ModalBody id=\"modalBody\">\r\n                    <div id=\"modalImage\"></div>\r\n                    <div id=\"modalForm\">\r\n                  <Form id=\"registerForm\" onSubmit={this.handleSubmit} >\r\n          <FormGroup>\r\n            <Label htmlFor=\"registerUsername\">Username</Label>\r\n            <Input\r\n              onChange={(event) => this.setState({username: event.target.value})}\r\n              value={this.state.username}\r\n              id=\"registerUsername\"\r\n            ></Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label htmlFor=\"registerEmail\">Email</Label>\r\n            <Input\r\n              onChange={(event) => this.setState({email: event.target.value})}\r\n              value={this.state.email}\r\n              id=\"registerEmail\"\r\n              type=\"email\"\r\n            ></Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label htmlFor=\"registerPassword\"> Password</Label>\r\n            <Input\r\n              onChange={(event) => this.setState({password: event.target.value})}\r\n              value={this.state.password}\r\n              id=\"registerPassword\"\r\n              type=\"password\"\r\n            ></Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label htmlFor=\"passwordConfirm\">Confirm Password</Label>\r\n            <Input\r\n              onChange={(event) => this.setState({passwordConfirm: event.target.value})}\r\n              value={this.state.passwordConfirm}\r\n              id=\"passwordConfirm\"\r\n              type=\"password\"\r\n            ></Input>\r\n          </FormGroup>\r\n        </Form>\r\n      </div>\r\n    </ModalBody>\r\n    <ModalFooter className=\"modalFooter\">\r\n      <Button form=\"registerForm\" id=\"modalSubmitButton\" type=\"submit\">\r\n        Create Account\r\n      </Button>{\" \"}\r\n    </ModalFooter>\r\n  </Modal>\r\n</div>\r\n    )\r\n}\r\n}\r\n\r\nexport default HandleSubmit;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {Form, FormGroup, Label, Input, Button, Modal, ModalBody, ModalHeader, ModalFooter,} from \"reactstrap\";\r\nimport APIURL from '../helpers/environment';\r\n\r\n\r\ntype PassedProps ={\r\n    updateToken: (token: string) => void;\r\n    open: boolean,\r\n    close: () => void,\r\n    adminStatus: () => void,\r\n    setUser: (username: string) => void\r\n  }\r\n\r\ntype UserState = {\r\n    username: string,\r\n    password: string\r\n}\r\n\r\n\r\nclass Login extends React.Component<PassedProps, UserState> {\r\n  constructor(props: PassedProps){\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = {\r\n        username: '',\r\n        password: ''\r\n      };    \r\n  };\r\n\r\n\r\n  handleSubmit(event: any){\r\n    event.preventDefault();\r\n    let username = this.state.username;\r\n    let password = this.state.password;\r\n    fetch(`${APIURL}/user/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ user: {username, password } }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.error) {\r\n            alert(\"Login not valid, please try again\");\r\n          } else if(data.isAdmin == true){\r\n            this.props.adminStatus();\r\n            this.props.updateToken(data.sessionToken);\r\n            this.props.setUser(this.state.username);\r\n            console.log(data.isAdmin);\r\n            this.props.close();\r\n          } else {\r\n            this.props.updateToken(data.sessionToken);\r\n            this.props.setUser(this.state.username);\r\n            this.props.close();\r\n          }\r\n        });\r\n    }\r\n    render(){\r\n      return(\r\n        <div id=\"login\" role=\"navigation\">\r\n          <Modal isOpen={this.props.open} id=\"loginModal\">\r\n            <ModalHeader className=\"modalHeader\">\r\n                <div id=\"mainTitle\">Welcome Back!</div>\r\n                <Button className=\"closeModal\" onClick={this.props.close}><span>x</span></Button>\r\n            </ModalHeader>\r\n            <ModalBody id=\"modalBody\">\r\n              <div id=\"modalImage\"></div>\r\n                <div id=\"modalForm\">\r\n                  <Form id=\"loginForm\" onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"loginrUsername\">Username</Label>\r\n                        <Input onChange={(event) => this.setState({username: event.target.value})} value={this.state.username} id=\"loginUsername\"></Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"loginPassword\"> Password</Label>\r\n                        <Input onChange={(event) => this.setState({password: event.target.value})} value={this.state.password} id=\"loginPassword\" type=\"password\"></Input>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </div>\r\n        </ModalBody>\r\n        <ModalFooter className=\"modalFooter\">\r\n          <Button form=\"loginForm\" id=\"modalSubmitButton\" type=\"submit\">\r\n            Login\r\n          </Button>{\" \"}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n        )\r\n    }\r\n  }\r\n\r\n  export default Login;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Nav, NavLink, Navbar, NavbarBrand, NavItem, Collapse, NavbarToggler, Button,} from \"reactstrap\";\r\nimport Registration from './Registration';\r\nimport Login from './Login';\r\nimport '../styles/Navbar.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ntype PassedProps ={\r\n  updateToken: (token: string) => void;\r\n  logout: () => void;\r\n  isLoggedIn: boolean;\r\n  isAdmin: boolean;\r\n  updateStatus: () => void;\r\n  setUserName: (username: string) => void;\r\n}\r\n\r\ntype NavState = {\r\n  collapsed: boolean,\r\n  showRegister: boolean,\r\n  showLogin: boolean,\r\n  hasScrolled: boolean\r\n}\r\n\r\n\r\nclass Sitebar extends React.Component<PassedProps, NavState> {\r\n    constructor(props: PassedProps){\r\n      super(props);\r\n      this.closeRegister = this.closeRegister.bind(this);\r\n      this.closeLogin = this.closeLogin.bind(this);\r\n      this.state ={\r\n        collapsed: true,\r\n        showRegister: false,\r\n        showLogin: false,\r\n        hasScrolled: false\r\n      } \r\n    }\r\n\r\n    closeRegister(){\r\n      this.setState({showRegister: false})\r\n    }\r\n\r\n    closeLogin(){\r\n      this.setState({showLogin: false})\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n        <div /*id=\"navbar\" className={classNames({\r\n        \"is-expanded\": !collapsed,\r\n        \"has-scrolled\": hasScrolled,\r\n      })}*/\r\n    >\r\n      <Navbar id=\"navbar\" color=\"faded\" light expand=\"md\">\r\n        <NavbarBrand id=\"brand\" href=\"/\" className=\"mr-auto\"><span>MI</span>CAMPFIRE</NavbarBrand>\r\n        <NavbarToggler onClick={() => this.setState({collapsed: !this.state.collapsed})} className=\"mr-2\" />\r\n        <Collapse isOpen={!this.state.collapsed} navbar>\r\n          <Nav id=\"navLinks\" navbar className=\"navbar-nav ml-auto fullwidth justify-content-end\">\r\n            <>\r\n            {this.props.isAdmin ? <NavItem><NavLink href=\"/admin\">Manage Users</NavLink></NavItem> : <></>}\r\n            </>\r\n    {!this.props.isLoggedIn ? (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink href=\"/search\">Campsites</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                <Button onClick={() => this.setState({showLogin: true})}>Login</Button>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Button onClick={() => this.setState({showRegister: true})}>SignUp</Button>\r\n                </NavItem>\r\n              </>\r\n            ) : null}\r\n           {this.props.isLoggedIn ? (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink href=\"/search\">Campsites</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink href=\"/campTrips\">My Campfires</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Button onClick={this.props.logout}>Logout</Button>\r\n                </NavItem>\r\n              </>\r\n            ) : null}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n      <Registration updateToken={this.props.updateToken} open={this.state.showRegister} close={this.closeRegister} setUser={this.props.setUserName}/>\r\n      <Login updateToken={this.props.updateToken} open={this.state.showLogin} close={this.closeLogin} adminStatus={this.props.updateStatus} setUser={this.props.setUserName}/>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Sitebar;","import React from \"react\";\r\nimport { Container, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faMapPin} from '@fortawesome/free-solid-svg-icons'\r\nimport '../styles/HomePage.css';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"mainDiv\">\r\n      <Container id=\"landingTitle\">\r\n        <h1 className=\"title\"><span>MI</span>campfire</h1>\r\n        <div className=\"navButtons\">\r\n        <Link to=\"/search\"><Button>National Parks</Button></Link> {/*<FontAwesomeIcon icon={faMapPin}></FontAwesomeIcon>*/}\r\n        <Button>State Parks</Button>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/imageNotFound.9ad964ff.png\";","import { error } from 'console';\r\nimport React from 'react';\r\nimport { ModalBody, Modal, ModalFooter, Button } from 'reactstrap';\r\n\r\ntype AcceptedProps={\r\n    modalOpen: boolean,\r\n    parkCode: string,\r\n    closeModal: () => void\r\n}\r\n\r\ntype ExtrasState={\r\n    activities: any;\r\n}\r\n\r\nconst api_key = process.env.REACT_APP_API_KEY;\r\n\r\nclass Extras extends React.Component<AcceptedProps, ExtrasState>{\r\n    constructor(props: AcceptedProps){\r\n        super(props);\r\n        this.getActivities = this.getActivities.bind(this);\r\n        this.state= {\r\n            activities: []\r\n        }  \r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getActivities();\r\n    }\r\n\r\n    setActivities(json: any){\r\n        this.setState({activities: json})\r\n    }\r\n\r\n    getActivities(){\r\n        // console.log(this.props.parkCode);\r\n        let parkCode: string = this.props.parkCode;\r\n        let url: string = `https://developer.nps.gov/api/v1/thingstodo?parkCode=${parkCode}&stateCode=MI&limit=10&api_key=${api_key}`;\r\n                    \r\n        fetch(url)\r\n        .then(result => {return result.json()})\r\n        .then(json => this.setActivities(json))\r\n        .catch((error) => console.log(error))\r\n\r\n    };\r\n\r\n    render(){\r\n        {console.log(this.state.activities)}\r\n        return (\r\n            <Modal isOpen={this.props.modalOpen}>\r\n                <ModalBody>\r\n                    {/* {this.state.activities.activities[0].name} */}\r\n                    {/* {this.state.activities ? this.state.activities.map((act: any) => {\r\n                        return (\r\n                            <div>{act.activities[0].name}</div>\r\n                        )\r\n                    }) : <></>} */}\r\n                    {this.state.activities ? <p>Hello from the Things To Do Modal {this.props.parkCode}</p> : <p>Activities not loaded</p>}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button onclick={() => this.props.closeModal()}>Done</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Extras;","import React from 'react';\r\nimport {Container, Button, Col, CardImg, Card, CardBody, CardHeader, Row, CardFooter} from 'reactstrap';\r\nimport '../styles/Search.css';\r\nimport NotFound from '../assets/imageNotFound.png';\r\nimport APIURL from '../helpers/environment';\r\nimport Extras from './Extras';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faFire, faMapPin, faShower, faSignal, faTint, faToilet} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\ntype AcceptProps ={\r\n    token: string;\r\n}\r\n\r\ntype SearchState = {\r\n    pageNumber: number,\r\n    allSites: any,\r\n    oneSiteInfo: any,\r\n    extrasModal: boolean,\r\n    parkCode: string\r\n}\r\nconst api_key = process.env.REACT_APP_API_KEY;\r\n\r\nclass Search extends React.Component<AcceptProps, SearchState>{\r\n    constructor(props: AcceptProps){\r\n        super(props);\r\n        this.getSites = this.getSites.bind(this);\r\n        this.nextPage = this.nextPage.bind(this);\r\n        this.previousPage = this.previousPage.bind(this);\r\n        this.createNewTrip = this.createNewTrip.bind(this);\r\n        // this.extrasModal = this.extrasModal.bind(this);\r\n        this.closeExtrasModal= this.closeExtrasModal.bind(this);\r\n        this.state ={\r\n            pageNumber: 1,\r\n            allSites: null,\r\n            oneSiteInfo: null,\r\n            extrasModal: false,\r\n            parkCode: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getSites();\r\n    }\r\n    \r\n    getSites = () => {\r\n        const baseURL: string = 'https://developer.nps.gov/api/v1/campgrounds?stateCode=MI';\r\n        let url: string = baseURL + `&start=${this.state.pageNumber}&limit=3&api_key=${api_key}`;\r\n                    \r\n        fetch(url)\r\n        .then(result => {return result.json()})\r\n        .then(json => {this.setState({allSites: json})})\r\n    };\r\n\r\n    nextPage(){\r\n        this.setState({pageNumber: this.state.pageNumber + 3});\r\n        this.getSites();\r\n    }\r\n\r\n    previousPage(){\r\n        this.setState({pageNumber: this.state.pageNumber - 3});\r\n        this.getSites();\r\n    }\r\n\r\n    extrasModal(parkCode: string){\r\n        this.setState({parkCode: parkCode});\r\n        this.setState({extrasModal: true});\r\n    }\r\n\r\n    closeExtrasModal(){\r\n        console.log(\"hitting?\")\r\n        this.setState({extrasModal: false})\r\n    }\r\n\r\n    createNewTrip(site: any){\r\n        let token = this.props.token;\r\n        let campsiteName = site.name;\r\n        let siteDescription = site.description ? site.description : null;\r\n        let totalSites = site.campsites.totalSites ? site.campsites.totalSites : null;\r\n        let contactEmail = site.contacts.emailAddresses[0].emailAddress ? site.contacts.emailAddresses[0].emailAddress : null;\r\n        // let contactPhone = site.contacts.phoneNumbers[0].phoneNumber ? site.contacts.phoneNumbers[0].phoneNumber : null;\r\n        let siteAddress = site.addresses[0].city && site.addresses[0].line1 ? site.addresses[0].city + site.addresses[0].line1 : null;\r\n        let operatingHours = site.operatingHours[0].description ? site.operatingHours[0].description: null;\r\n        let reservationUrl = site.url ? site.url: null;\r\n        let nights = null;\r\n        let costPerNight = site.fees.length > 0 ? site.fees[0].cost: null;\r\n        let siteImage = null;\r\n       \r\n        // console.log(site);\r\n        fetch(`${APIURL}/tripList/new`, {\r\n            method: \"POST\",\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n            }),\r\n            body: JSON.stringify({ \r\n                trip: {\r\n                campsiteName,\r\n                siteDescription,\r\n                totalSites,\r\n                contactEmail,\r\n                // contactPhone,\r\n                siteAddress,\r\n                operatingHours,\r\n                reservationUrl,\r\n                nights,\r\n                costPerNight,\r\n                siteImage,\r\n                }\r\n            }),\r\n          })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              if (data.error) {\r\n                alert(\"Something went wrong, trip not saved\");\r\n              } else{\r\n                  alert(\"Trip Saved!\")\r\n                  //TODO: add toast\r\n                  console.log(\"Trip Saved!\")\r\n              }\r\n            });\r\n        }\r\n    \r\n    render(){\r\n        return(\r\n            <div id=\"mainDiv\">\r\n                <div id=\"resultsBody\">\r\n                {console.log(this.state.allSites)}\r\n                {this.state.allSites ? this.state.allSites.data.map((site: any, index: any) =>{ \r\n                    return <Container id=\"siteResults\">\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <th>{`${site.name} - ${site.addresses[0].city}`}</th>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <Row>                          \r\n                            <Col className=\"col-md-3\">\r\n                            {site.images.length === 0 ? <img src={NotFound} className=\"img-fluid\" alt=\"imageNotFound\"/> : <img id=\"siteImage\" src={site.images[0].url} className=\"img-fluid\" alt=\"Campsite\"/>}\r\n                            </Col>\r\n                            <Col className=\"col-md-4\">\r\n                            <p>{site.description ? site.description : \"Site description not available\"}</p>\r\n                            <tr><a href={site.url} target=\"blank\">Park Website</a></tr>\r\n                            </Col>\r\n                            <Col className=\"col-md-5\">                                                           \r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Open Dates</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>                                                               \r\n                                        <td>{site.operatingHours.length > 0 ? site.operatingHours[0].description : \"Contact for operating hours\"}</td>\r\n                                    </tr>\r\n                                    <hr/>\r\n                                    <tr>\r\n                                        <td><b>Total Sites:</b> {site.campsites.totalSites ? site.campsites.totalSites : \"Contact for available sites\"}</td>\r\n                                    </tr>\r\n                                    <hr/>\r\n                                </tbody>\r\n                            </table>\r\n                            <div>\r\n                                <th>Amenities:</th>\r\n                                <div id=\"amenitiesIcons\">\r\n                                    {site.amenities.cellPhoneReception == \"No\" ? <div id=\"noSignal\" title=\"No cellphone signal\"><FontAwesomeIcon icon={faSignal}></FontAwesomeIcon></div> : <div id=\"signal\" title=\"Cellphone signal available\"><FontAwesomeIcon icon={faSignal}></FontAwesomeIcon></div>}\r\n                                    {site.amenities.firewoodForSale == \"No\" ? <div id=\"noFirewood\" title=\"No firewood for sale\"><FontAwesomeIcon icon={faFire}></FontAwesomeIcon></div> : <div id=\"fire\" title=\"Firewood for sale\"><FontAwesomeIcon icon={faFire}></FontAwesomeIcon></div>}\r\n                                    {site.amenities.potableWater[0] ? <div id=\"water\" title=\"Potable water available\"><FontAwesomeIcon icon={faTint}></FontAwesomeIcon></div> : <div id=\"noWater\" title=\"No potable water\"><FontAwesomeIcon icon={faTint}></FontAwesomeIcon></div>}\r\n                                    {site.amenities.showers[0] == \"None\" ? <div id=\"noShower\" title=\"No shower facilities\"><FontAwesomeIcon icon={faShower}></FontAwesomeIcon></div> : <div id=\"shower\" title=\"Shower facilities available\"><FontAwesomeIcon icon={faShower}></FontAwesomeIcon></div>}\r\n                                    {site.amenities.toilets[0] ? <div id=\"toilet\" title=\"Toilets available\"><FontAwesomeIcon icon={faToilet}></FontAwesomeIcon></div> : <div id=\"noToilet\" title=\"No toilets available\"><FontAwesomeIcon icon={faToilet}></FontAwesomeIcon></div>}\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <hr/>\r\n                            <div className=\"moreInfoButtons\">\r\n                                <Button onClick={() => this.extrasModal(site.parkCode)}>Things To Do</Button>\r\n                                {this.props.token ? <Button onClick={() => this.createNewTrip(site)} value={site}>Save Campsite</Button> : <></> }\r\n                                \r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                        </CardBody>\r\n                    </Card>                   \r\n                </Container>}) : <></>}\r\n                    <Extras modalOpen={this.state.extrasModal} parkCode={this.state.parkCode} closeModal={this.closeExtrasModal}/>\r\n                <div id=\"pageButtons\">\r\n                    <Button onClick={this.previousPage}>Previous Sites</Button>\r\n                    <Button onClick={this.nextPage}>More Sites</Button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport {Button, Modal, ModalBody, Input} from 'reactstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faMinusCircle, faPenAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport APIURL from '../helpers/environment';\r\n\r\ntype PackProps={\r\n    packList: Array<object>;\r\n    getItems: (trip:number) => void;\r\n    token: string;\r\n}\r\n\r\ntype PackState={\r\n    editModal: boolean,\r\n    itemToUpdate: string,\r\n    tripId: number,\r\n    itemId: number,\r\n}\r\n\r\nclass PackList extends React.Component<PackProps, PackState>{\r\n    constructor(props: PackProps){\r\n        super(props);\r\n        this.deletePackItem = this.deletePackItem.bind(this);\r\n        this.editPackItem = this.editPackItem.bind(this);\r\n        this.state={\r\n            editModal: false,\r\n            itemToUpdate: '',\r\n            tripId: 0,\r\n            itemId: 0\r\n        }\r\n    }\r\n    \r\n    deletePackItem = (item: any) => {\r\n        fetch(`${APIURL}/packList/${item.id}`, {\r\n            method: \"DELETE\",\r\n            headers: new Headers({\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: this.props.token,\r\n              }),\r\n            }).then(() => this.props.getItems(item.tripId));\r\n      }\r\n\r\n    editPackItem = (item:any) =>{\r\n        this.setState({itemToUpdate: item.packItem});\r\n        this.setState({editModal: true});\r\n        this.setState({tripId: item.tripId});\r\n        this.setState({itemId: item.id})\r\n    }\r\n\r\n    updatePackItem = () => {\r\n        let newItem = this.state.itemToUpdate;\r\n        fetch(`${APIURL}/packList/${this.state.itemId}`, {\r\n        method: \"PUT\",\r\n        headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.token\r\n          }),\r\n        body: JSON.stringify({\r\n          packList: {\r\n            newItem \r\n          }},\r\n        )\r\n        }).then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.error) {\r\n            console.log(data.error.message);\r\n          }else{\r\n            this.props.getItems(this.state.tripId);\r\n            this.setState({editModal: false})\r\n                //TODO: add toast\r\n          }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.props.packList.map((item: any, index) => {\r\n                return <tr key={index}>\r\n                    <td>{item.packItem}</td>\r\n                    <td>{item.who}</td>\r\n                    <div id=\"packListButtons\">\r\n                    <Button color=\"info\" onClick={() => this.editPackItem(item)}><FontAwesomeIcon icon={faPencilAlt}></FontAwesomeIcon></Button>\r\n                    <Button color=\"danger\" onClick={() => this.deletePackItem(item)}><FontAwesomeIcon icon={faMinusCircle}></FontAwesomeIcon></Button>\r\n                    </div>\r\n                    <div>\r\n                        <Modal isOpen={this.state.editModal}>\r\n                            <ModalBody>\r\n                                <h4>Edit Pack Item</h4>\r\n                                <Button onClick={() => this.setState({editModal: false})}>X</Button>\r\n                                <Input name=\"itemToEdit\" type=\"text\" placeholder={this.state.itemToUpdate} onChange={(e) => this.setState({itemToUpdate: e.target.value})}/>\r\n                                <Button onClick={() => this.updatePackItem()}>Save</Button>\r\n                            </ModalBody>\r\n                        </Modal>\r\n                    </div>\r\n                </tr>\r\n              }))\r\n            }            \r\n}\r\n\r\nexport default PackList;","import React, { Component } from 'react';\r\nimport {Card, CardFooter, Col, Input, CardHeader, CardBody, Form, Button} from 'reactstrap';\r\nimport PackList from './PackList';\r\nimport APIURL from '../helpers/environment';\r\n\r\ntype AcceptedProps ={\r\n    site: any,\r\n    index: number,\r\n    deleteTrip: (tripId: number) => void,\r\n    token: string\r\n    fetchAllSites: () => void \r\n}\r\n\r\ntype TripState ={\r\n    packList: string,\r\n    packItem: string,\r\n    campRes: boolean,\r\n    recPass: boolean,\r\n    fireRes: boolean,\r\n    rustic: boolean,\r\n    packListItems: Array<object>\r\n}\r\n\r\nclass UserTripDetails extends Component<AcceptedProps, TripState>{\r\n    constructor(props: AcceptedProps){\r\n        super(props);\r\n        this.updateTripInfo = this.updateTripInfo.bind(this);\r\n        this.addPackItem = this.addPackItem.bind(this);\r\n        this.state={\r\n            packList: '',\r\n            packItem: '',\r\n            campRes: false,\r\n            recPass: false,\r\n            fireRes: false,\r\n            rustic: false,\r\n            packListItems: []\r\n        }\r\n    }\r\n\r\n    fetchPackList = (trip: number) => {\r\n        let tripId = trip;\r\n        if(this.props.token){\r\n          fetch(`${APIURL}/packList/getList/${tripId}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: this.props.token,\r\n            }),\r\n          })\r\n            .then((response) => response.json())\r\n            .then((body) => {\r\n              if(body.length > 0){\r\n                this.setState({packListItems: body})\r\n              }\r\n            })\r\n            .catch((error) => console.log(error));\r\n        }\r\n      }\r\n\r\n      addPackItem = (siteId: number, item: string) => {\r\n        let tripId: number = siteId;\r\n        let packItem = item;\r\n        // let userName = this.props.user\r\n    \r\n        fetch(`${APIURL}/packList/newPackList`, {\r\n            method: \"POST\",\r\n            headers: new Headers({\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: this.props.token\r\n              }),\r\n            body: JSON.stringify({\r\n              packList: {\r\n                tripId, \r\n                packItem, \r\n              }, user: {userName: \"MountainGoat220\"}},\r\n            )\r\n            }).then((response) => response.json())\r\n            .then((data) => {\r\n              if (data.error) {\r\n                console.log(data.error.message);\r\n              } else{\r\n                  this.fetchPackList(tripId);\r\n                  //TODO: add toast\r\n              }\r\n            });\r\n            \r\n      }\r\n\r\n      updateTripInfo = (tripId: number) => {\r\n        let campsiteReserved = this.state.campRes;\r\n        let recreationPassport = this.state.recPass;\r\n        let fireRestrictions = this.state.fireRes;\r\n        let rusticSite = this.state.rustic;\r\n    \r\n        fetch(`${APIURL}/tripList/${tripId}`, {\r\n            method: \"PUT\",\r\n            headers: new Headers({\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: this.props.token,\r\n              }),\r\n            body: JSON.stringify({trip: {\r\n                  campsiteReserved,\r\n                  recreationPassport,\r\n                  fireRestrictions,\r\n                  rusticSite\r\n                }\r\n            }),\r\n            }).then(() => this.props.fetchAllSites());\r\n      }\r\n\r\n    \r\n  handleChange(event:any){\r\n    this.setState({packItem: event.target.value})\r\n  }\r\n    render(){\r\n        return(\r\n            <Card className=\"tripCard\" key={this.props.index}>\r\n                    <CardHeader className=\"cardHeader\">\r\n                      <b>{this.props.site.campsiteName}</b>\r\n                    </CardHeader>\r\n                    <CardBody className=\"cardBody\">\r\n                        <p>{this.props.site.siteDescription}</p>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <Col className=\"col align-self-start\">\r\n                          <Form>\r\n                            <h6>Fee Calculator</h6>\r\n                            <Input type=\"number\" placeholder=\"Site fee per night\"></Input>\r\n                            <Input type=\"number\" placeholder=\"# of campers\"></Input>\r\n                            <Input type=\"number\" placeholder=\"# of nights\"></Input>\r\n                          </Form>\r\n                          <hr/>\r\n                          <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group=prepend\">\r\n                              <div className=\"input-group-text\">\r\n                                <input type=\"checkbox\" checked={this.props.site.campsiteReserved ? true : false} aria-label=\"reservation\" value=\"reservation\" onChange={() => this.setState({campRes: true})}/>\r\n                              </div>\r\n                            </div>\r\n                            <label htmlFor=\"reservation\">Campsite reserved</label>\r\n                          </div>\r\n                          <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group=prepend\">\r\n                              <div className=\"input-group-text\">\r\n                                <input type=\"checkbox\" checked={this.props.site.recreationPassport ? true : false} aria-label=\"recPassport\" value=\"recPassport\" onChange={()=>this.setState({recPass: true})}/>\r\n                              </div>\r\n                            </div>\r\n                            <label htmlFor=\"recPassport\">Recreation Passport <i>(State parks only)</i></label>\r\n                          </div>\r\n                          <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group=prepend\">\r\n                              <div className=\"input-group-text\">\r\n                                <input type=\"checkbox\" checked={this.props.site.fireRestriction ? true : false} aria-label=\"reservation\" value=\"reservation\" onChange={()=>this.setState({fireRes: true})}/>\r\n                              </div>\r\n                            </div>\r\n                            <label htmlFor=\"reservation\">Fire restrictions</label>\r\n                          </div>\r\n                          <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group=prepend\">\r\n                              <div className=\"input-group-text\">\r\n                                <input type=\"checkbox\" checked={this.props.site.rusticSite ? true : false} aria-label=\"rustic\" value=\"rustic\" onChange={()=>this.setState({rustic: true})}/>\r\n                              </div>\r\n                            </div>\r\n                            <label htmlFor=\"rustic\">Rustic site</label>\r\n                          </div>\r\n                          <Button onClick={() => this.updateTripInfo(this.props.site.id)}>Save Changes</Button>\r\n                        </Col>\r\n                        <Col className=\"col align-self-end\">\r\n                          <table>\r\n                            <thead>Pack List</thead>\r\n                              <tr>\r\n                                <th>Item</th>\r\n                                <th>Who</th>\r\n                              </tr>\r\n                              {this.state.packListItems.length > 0 ? <PackList packList={this.state.packListItems} getItems={this.fetchPackList} token={this.props.token}/> : this.fetchPackList(this.props.site.id)}\r\n                              <tr>\r\n                                <input type=\"text\" id=\"newItem\" placeholder=\"Add new pack item\" value={this.state.packItem} onChange={this.handleChange.bind(this)}/>\r\n                                <Button color=\"success\" onClick={() => this.addPackItem(this.props.site.id, this.state.packItem )}> + </Button>\r\n                              </tr>\r\n                          </table>\r\n                        </Col>\r\n                        </div>\r\n                    </CardBody>\r\n                    <CardFooter className=\"cardFooter\">\r\n                      <Col id=\"deleteCol\" md=\"6\">\r\n                        <Button\r\n                          onClick={() => {\r\n                            this.props.deleteTrip(this.props.site);\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </Col>\r\n                    </CardFooter>\r\n                  </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserTripDetails;","import React from 'react';\r\nimport {\r\n  Col,\r\n  Container, Card, CardBody, CardHeader, CardFooter, Button, Modal, ModalBody, Form, Input\r\n} from \"reactstrap\";\r\nimport PackList from './PackList';\r\nimport UserTripDetails from './UserTripDetails';\r\nimport APIURL from '../helpers/environment';\r\n// import { useToasts } from \"react-toast-notifications\";\r\n\r\n\r\ntype AcceptProps ={\r\n    token: string;\r\n    user: string\r\n}\r\n\r\ntype SearchState = {\r\n    userTrips: Array<object>,\r\n    updateActive: boolean,\r\n    tripToUpdate: object,\r\n    packItem: string,\r\n    packListItems: Array<object>,\r\n    packListEmpty: boolean,\r\n    \r\n}\r\n\r\nclass MySites extends React.Component<AcceptProps, SearchState>{ \r\n  constructor(props: AcceptProps){\r\n      super(props);\r\n      this.updateOn = this.updateOn.bind(this);\r\n      this.editUpdateSite = this.editUpdateSite.bind(this);\r\n      this.updateOff = this.updateOff.bind(this);\r\n      this.deleteTrip = this.deleteTrip.bind(this);\r\n      this.state ={\r\n          userTrips: [],\r\n          updateActive: false,\r\n          tripToUpdate: {},\r\n          packItem: '',\r\n          packListItems: [],\r\n          packListEmpty: true,\r\n          \r\n      }\r\n  }\r\n\r\n\r\n  fetchAllSites = () => {\r\n    if(this.props.token){\r\n      fetch(`${APIURL}/tripList/all`, {\r\n        method: \"GET\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: this.props.token,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((body) => this.setState({userTrips: body}))\r\n        .catch((error) => console.log(error));\r\n    }\r\n    }\r\n\r\n  deleteTrip = (trip:any) => {\r\n    fetch(`${APIURL}/tripList/${trip.id}`, {\r\n        method: \"DELETE\",\r\n        headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.token,\r\n          }),\r\n        }).then(() => this.fetchAllSites());\r\n  }\r\n\r\n  \r\n\r\n\r\n  editUpdateSite = (trip: any) => {\r\n    this.setState({tripToUpdate: trip});\r\n  };\r\n\r\n  updateOn = () => {\r\n    this.setState({updateActive: true});\r\n  };\r\n\r\n  updateOff = () => {\r\n    this.setState({updateActive: false});\r\n  };\r\n\r\n  \r\n  componentDidMount(){\r\n    this.fetchAllSites();\r\n    console.log(this.props.token)\r\n    }\r\n\r\n\r\n//   const { addToast } = useToasts();\r\n \r\nrender(){\r\n  {console.log(this.props.user)}\r\n  return (\r\n    <div>\r\n      <div id=\"siteCards\">\r\n        <Container>\r\n          <Col>\r\n            {console.log(this.state.userTrips.length, this.state.userTrips)}\r\n             {this.state.userTrips.length ? (\r\n              this.state.userTrips.map((site: any, index) => {\r\n                return <UserTripDetails site={site} index={index} token={this.props.token} deleteTrip={this.deleteTrip} fetchAllSites={this.fetchAllSites} />\r\n\r\n              })\r\n            ) : this.fetchAllSites()} \r\n          </Col>\r\n         \r\n          <Modal isOpen={this.state.updateActive}>\r\n            <ModalBody>\r\n                <h4>Edit Campsite</h4>\r\n                <div id=\"deleteModalButtons\">\r\n                    <Button onClick={() => this.setState({updateActive: false})}>Done</Button>\r\n                </div>\r\n            </ModalBody>\r\n        </Modal>\r\n        </Container> \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n}\r\n\r\nexport default MySites;","import userEvent from '@testing-library/user-event';\r\nimport React from 'react';\r\nimport {Button} from 'reactstrap';\r\nimport APIURL from '../helpers/environment';\r\n\r\ntype Props={\r\n    isAdmin: boolean;\r\n    token: string;\r\n}\r\n\r\ntype AdminState={\r\n    admin: boolean;\r\n    allUsers: any\r\n}\r\n\r\nclass Admin extends React.Component<Props, AdminState>{\r\n    constructor(props: Props){\r\n        super(props);\r\n        this.modifyAdminStatus = this.modifyAdminStatus.bind(this);\r\n        this.deleteUserFunction = this.deleteUserFunction.bind(this);\r\n        this.state={\r\n            admin: true,\r\n            allUsers: []\r\n        }\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     this.fetchAllUsers();\r\n    //     console.log(this.props.isAdmin)\r\n    // }\r\n\r\n    fetchAllUsers(){\r\n        fetch(`${APIURL}/user/admin`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: this.props.token,\r\n            }),\r\n          })\r\n            .then((response) => response.json())\r\n            .then((body) => this.setState({allUsers: body}))\r\n            .catch((error) => console.log(error));\r\n    }\r\n\r\n    modifyAdminStatus(user: any){\r\n        fetch(`${APIURL}/user/admin/${user.id}`, {\r\n            method: \"PUT\", \r\n            headers: new Headers({\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: this.props.token,\r\n            })\r\n          })\r\n            .then((response) => response.json())\r\n            .then((data) => console.log(data))\r\n            .catch((error) => console.log(error));\r\n            this.fetchAllUsers();\r\n    }\r\n    \r\n\r\n    deleteUserFunction(user: any){\r\n        fetch(`${APIURL}/user/admin/${user.id}`, {\r\n            method: \"DELETE\",\r\n            headers: new Headers({\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: this.props.token,\r\n            })\r\n          })\r\n          .then((response) => response.json())\r\n            .then((data) => console.log(data))\r\n            .catch((error) => console.log(error));\r\n            this.fetchAllUsers();\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div id=\"manageUsersTable\">\r\n                <thead>\r\n                    User Management Options\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>User</th>\r\n                        <th>Email</th>\r\n                        <th>Admin Privileges</th>\r\n                        <th>Modify Privileges</th>\r\n                        <th>Delete User</th>\r\n                    </tr>\r\n                    {this.state.allUsers.length > 0 ? this.state.allUsers.map((user: any) => {\r\n                        return <tr>\r\n                                <td>{user.username}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.isAdmin == true ? \"Yes\" : \"No\"}</td>\r\n                                <td><Button color=\"info\" onClick={() => this.modifyAdminStatus(user)}>Modify</Button></td>\r\n                                <td><Button color=\"danger\" onClick={() => this.deleteUserFunction(user)}>X</Button></td>\r\n                            </tr>\r\n                    }) : this.fetchAllUsers()}\r\n                </tbody>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Admin;","import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  Route,\n} from \"react-router-dom\";\nimport {Button} from 'reactstrap';\nimport NavBar from './components/Navbar';\nimport HomePage from './components/Homepage';\nimport Search from './components/Search';\nimport Sites from './components/Sites';\nimport Admin from './components/Admin';\n// import Browse from './components/Browse';\n\n\nconst AUTH = {\n  isAuthenticated: false,\n};\n\n\nconst App: React.FunctionComponent = () => {\n  const [sessionToken, setSessionToken] = useState<any>();\n  const [isAdmin, setAdminStatus] = useState(false);\n  const [userName, setUserName] = useState('');\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setSessionToken(localStorage.getItem(\"token\"));\n      AUTH.isAuthenticated = true;\n    }\n\n  }, [sessionToken]);\n\n  const updateToken = (newToken: string) => {\n    localStorage.setItem(\"token\", newToken);\n    setSessionToken(newToken);\n    console.log(sessionToken);\n  };\n\n  const adminStatus = () => {\n    setAdminStatus(true);\n  }\n\n  const userNameFunction = (username: string) => {\n    setUserName(username);\n  }\n\n  const clearToken = () => {\n    localStorage.clear();\n    setSessionToken(\"\");\n    setUserName(\"\");\n    setAdminStatus(false);\n    AUTH.isAuthenticated = false;\n  };\n\n  return (\n    <Router>\n      <NavBar updateToken={updateToken} logout={clearToken} isLoggedIn={!!sessionToken} isAdmin={!!isAdmin} updateStatus={adminStatus} setUserName={userNameFunction}/> \n      <Switch>\n        <Route path=\"/search\">\n          <Search token={sessionToken}/>\n        </Route>\n        <Route path=\"/admin\">\n          <Admin isAdmin={isAdmin} token={sessionToken}/>\n          </Route>\n        <Route path=\"/campTrips\">\n          <Sites token={sessionToken} user={userName}/>\n        </Route>\n        <Route path=\"/\">\n          <HomePage/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}